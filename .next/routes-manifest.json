{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/blog/[slug]",
      "regex": "^/blog/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/blog/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/stream/[slug]",
      "regex": "^/stream/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/stream/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/book",
      "regex": "^/book(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/book(?:/)?$"
    },
    {
      "page": "/connect",
      "regex": "^/connect(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/connect(?:/)?$"
    },
    {
      "page": "/consciousness",
      "regex": "^/consciousness(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/consciousness(?:/)?$"
    },
    {
      "page": "/framework",
      "regex": "^/framework(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/framework(?:/)?$"
    },
    {
      "page": "/live-thoughts",
      "regex": "^/live\\-thoughts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/live\\-thoughts(?:/)?$"
    },
    {
      "page": "/projects",
      "regex": "^/projects(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/projects(?:/)?$"
    },
    {
      "page": "/stream",
      "regex": "^/stream(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/stream(?:/)?$"
    },
    {
      "page": "/stream/welcome-to-my-random-access-mind",
      "regex": "^/stream/welcome\\-to\\-my\\-random\\-access\\-mind(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/stream/welcome\\-to\\-my\\-random\\-access\\-mind(?:/)?$"
    },
    {
      "page": "/tabs",
      "regex": "^/tabs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tabs(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}